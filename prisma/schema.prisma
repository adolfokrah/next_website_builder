// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


enum PageStatus {
  DRAFT
  PUBLISHED
}


enum Role  {
    MAIN_ADMIN
    EDITOR
}

enum AdminStatus {
  PENDING
  ACTIVE
}

model AdminUser {
  id            String     @id @default(auto()) @map("_id") @db.ObjectId
  name          String?     
  email         String
  password      String?
  avatar        String?
  organization         Organization    @relation(fields: [organizationId], references: [id])
  organizationId       String     @db.ObjectId
  invitationDate  DateTime?
  status          AdminStatus
  apiKey          String
  projects        Project[]
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  role          Role
}

model Organization{
  id            String     @id @default(auto()) @map("_id") @db.ObjectId
  name          String? 
  users         AdminUser[]
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
}

model Project {
  id            String     @id @default(auto()) @map("_id") @db.ObjectId
  name          String? 
  pages         Page[] 
  globalBlocks  GlobalBlock[] 
  files         File[]
  owner         AdminUser    @relation(fields: [ownerId], references: [id])
  ownerId       String     @db.ObjectId
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt   
}


model Page {
  id              String     @id @default(auto()) @map("_id") @db.ObjectId
  name            String     
  slug            String     
  blocks          Json[]
  metaTitle       String? 
  metaKeyWords    String?
  metaDescription String?
  featuredImage   String?
  project         Project    @relation(fields: [projectId], references: [id])
  projectId       String     @db.ObjectId
  status          PageStatus @default(DRAFT)  
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
}
model GlobalBlock {
  id            String     @id @default(auto()) @map("_id") @db.ObjectId
  name          String     @unique
  block         Json
  project         Project    @relation(fields: [projectId], references: [id])
  projectId       String     @db.ObjectId
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
}


model File {
   id            String     @id @default(auto()) @map("_id") @db.ObjectId
   url           String
   name          String?
   width         Int
   height        Int
   cloudinaryImageId String?
   bytes         Int?
   project         Project    @relation(fields: [projectId], references: [id])
   projectId       String     @db.ObjectId
   createdAt     DateTime   @default(now())
   updatedAt     DateTime   @updatedAt
}





