name: Create Release

on:
  push:
    branches:
      - main

jobs:
  create_release:
    if: "github.actor != 'github-actions[bot]'"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16' # Adjust the Node.js version as needed

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Get package version
        id: get_version
        run: echo ::set-output name=version::$(node -p "require('./package.json').version")

      - name: Determine version
        id: determine_version
        run: |
          version=$(node -p "require('./package.json').version")
          commit_message=$(git log --format=%B -n 1 ${{ github.sha }})
          if [[ $commit_message == feat* ]]; then
            major=$(echo $version | cut -d. -f1)
            minor=$(echo $version | cut -d. -f2)
            patch=$(echo $version | cut -d. -f3)
            ((major++))
            new_version="$major.$minor.$patch"
          elif [[ $commit_message == fix* ]]; then
            major=$(echo $version | cut -d. -f1)
            minor=$(echo $version | cut -d. -f2)
            patch=$(echo $version | cut -d. -f3)
            ((minor++))
            new_version="$major.$minor.$patch"
          else
            major=$(echo $version | cut -d. -f1)
            minor=$(echo $version | cut -d. -f2)
            patch=$(echo $version | cut -d. -f3)
            ((patch++))
            new_version="$major.$minor.$patch"
          fi
          echo "::set-output name=version::$new_version"

      - name: Update package.json version
        run: |
          echo "Updating package.json version to $new_version"
          sed -i'' -e "s/\"version\": \".*\"/\"version\": \"$new_version\"/" package.json

      - name: Commit and push updated package.json
        run: |
          git config user.email adolfokrah@gmail.com
          git config user.name adolfokrah
          git checkout -b version-bump
          git add package.json
          git commit -m "chore: Update package.json version to $new_version"
          git push origin version-bump

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: version-bump
          commit-message: 'chore: Update package.json version to $new_version'
          title: 'chore: Update package.json version'
          body: 'This is an automated pull request to update the package version.'

      - name: Create Release
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          version=${{ steps.determine_version.outputs.version }}
          echo "Version: $version" # Debug statement to check the value of version
          body="Add your release notes here"
          release_name="v$version"
          echo "Release name: $release_name"
          tag_name="v$version"
          echo "Tag name: $tag_name" # Debug statement to check the value of tag_name
          curl --request POST \
            --url https://api.github.com/repos/${{ github.repository }}/releases \
            --header "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            --header "content-type: application/json" \
            --data "{
              \"tag_name\": \"$version\",
              \"target_commitish\": \"main\",
              \"name\": \"$version\",
              \"body\": \"$body\",
              \"draft\": false,
              \"prerelease\": false
            }"
